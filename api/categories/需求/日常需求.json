{"name":"日常需求","slug":"需求/日常需求","count":1,"postlist":[{"title":"卡片需求记录","slug":"由一个需求引出的关于html5、react状态的想法","date":"2018-10-26T03:55:04.000Z","updated":"2018-10-26T11:44:17.337Z","comments":true,"path":"api/articles/由一个需求引出的关于html5、react状态的想法.json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"背景介绍\"><a href=\"#背景介绍\" class=\"headerlink\" title=\"背景介绍\"></a>背景介绍</h3><p>进入工作以来的第一个需求，对一个页面进行优化。<br>原页面为三张卡片，现要求将对每个卡片增加新功能，并置于一个tab下单独显示。  </p>\n<h5 id=\"需求关键点\"><a href=\"#需求关键点\" class=\"headerlink\" title=\"需求关键点\"></a>需求关键点</h5><ol>\n<li>通过基础组件获取tab顺序，通过tab顺序控制每个tab下的页面展示  </li>\n<li>整个页面的高度需要如何设置  </li>\n<li>输入框的样式根据内容和焦点的变化  </li>\n<li>卡片的信息的状态  </li>\n<li>弹窗的显示  </li>\n<li>不同设备的样式微调  </li>\n</ol>\n<h5 id=\"解决思路\"><a href=\"#解决思路\" class=\"headerlink\" title=\"解决思路\"></a>解决思路</h5><ol>\n<li>牵扯到tab栏，因此有两种解决方案，一为将每个tab作为一个页面，每次点击tab进行跳页，因此三个页面需要开发三个组件；二为将三个页面作为一个组件开发，每次点击tab仅是切换组件的不同状态。  </li>\n</ol>\n<ul>\n<li>解决方案：考虑到仅有本页面用到三张卡，且减少额外的网络请求，因此最终采用第二种方案。</li>\n</ul>\n<ol start=\"2\">\n<li>不同设备，展示的功能不同，必然会导致有些设备内容高度不满一屏，而每个tab都有背景色，则必然会导致出现如下情况，因此需要计算内容高度。</li>\n</ol>\n<ul>\n<li>解决方案：原本想动态检测dom的高度，如果不满一屏，填充一个颜色与背景色相同的div，使其 高度 = 屏幕高度 - 其他dom元素高度，后来想想自己简直是个脑残，😂，直接令minheight=屏幕高度，不就解决了。</li>\n</ul>\n<ol start=\"3\">\n<li>本页面新增一个输入内容的功能，而当焦点在输入框中时，输入框颜色变化，在焦点消失后，输入框颜色变回原状，在用户输入内容时，字体变粗，且如果用户输入内容后但失去焦点，输入框状态不变。</li>\n</ol>\n<ul>\n<li>解决方案： 检测焦点用onfocus与onblur，检测内容变化用onchange  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这里使用zepto  </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">blur</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"input\"</span>).css(<span class=\"string\">\"border-color\"</span>,<span class=\"string\">\"#3E8AFF\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">focus</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">\"input\"</span>).css(<span class=\"string\">\"border-color\"</span>,<span class=\"string\">\"rgba(195,206,217,0.5)\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">change</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.refs.password.value!=<span class=\"string\">\"\"</span>?$(<span class=\"string\">\"input\"</span>).css(<span class=\"string\">\"font-weight\"</span>,<span class=\"string\">\"bold\"</span>):$(<span class=\"string\">\"input\"</span>).css(<span class=\"string\">\"font-weight\"</span>,<span class=\"string\">\"normal\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ol start=\"4\">\n<li>卡片的状态数据是跨域请求返回的，需要根据不同的数据展示不同的卡片信息</li>\n</ol>\n<ul>\n<li>解决方案：</li>\n</ul>\n<ol start=\"5\">\n<li>弹窗的显示有两种方式，一是写好弹窗的样式，但是displa：none；二是将样式信息存在一个函数中，如果满足触发条件就调用该函数。</li>\n<li>ios和android设备在显示上会有稍许差别，需要判断设备进行样式的单独微调。</li>\n</ol>\n","text":"背景介绍进入工作以来的第一个需求，对一个页面进行优化。<br>原页面为三张卡片，现要求将对每个卡片增加新功能，并置于一个tab下单独显示。  需求关键点通过基础组件获取tab顺序，通过tab顺序控制每个tab下的页面展示  整个页面的高度需要如何设置  输入框的样式根据内容和焦点","link":"","raw":null,"photos":[],"categories":[{"name":"需求","slug":"需求","count":1,"path":"api/categories/需求.json"},{"name":"日常需求","slug":"需求/日常需求","count":1,"path":"api/categories/需求/日常需求.json"}],"tags":[{"name":"html5","slug":"html5","count":1,"path":"api/tags/html5.json"},{"name":"react","slug":"react","count":1,"path":"api/tags/react.json"}]}]}